# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _apiBP
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


BP_ERROR = _apiBP.BP_ERROR
BP_NOTIFICATION = _apiBP.BP_NOTIFICATION
BP_OK = _apiBP.BP_OK
BPE_BT_AUTHENTICATION = _apiBP.BPE_BT_AUTHENTICATION
BPE_BT_ADDRESS = _apiBP.BPE_BT_ADDRESS
BPE_BT_ADAPTER_NOT_FOUND = _apiBP.BPE_BT_ADAPTER_NOT_FOUND
BPE_BT_DEVICE_NOT_FOUND = _apiBP.BPE_BT_DEVICE_NOT_FOUND
BPE_BT_DEVICE_NOT_PAIRED = _apiBP.BPE_BT_DEVICE_NOT_PAIRED
BPE_CONTACTING_DEVICE = _apiBP.BPE_CONTACTING_DEVICE
BPE_DEVICE_ALREADY_IN_ACQUISITION_MODE = _apiBP.BPE_DEVICE_ALREADY_IN_ACQUISITION_MODE
BPE_DEVICE_NOT_IN_ACQUISITION_MODE = _apiBP.BPE_DEVICE_NOT_IN_ACQUISITION_MODE
BPE_FIRMWARE_NOT_SUPPORTED = _apiBP.BPE_FIRMWARE_NOT_SUPPORTED
BPE_PORT_INITIALIZATION = _apiBP.BPE_PORT_INITIALIZATION
BPE_PORT_ALREADY_OPEN = _apiBP.BPE_PORT_ALREADY_OPEN
BPE_PORT_CLOSED = _apiBP.BPE_PORT_CLOSED
BPE_PORT_COULD_NOT_BE_OPENED = _apiBP.BPE_PORT_COULD_NOT_BE_OPENED
BPE_PORT_COULD_NOT_BE_CLOSED = _apiBP.BPE_PORT_COULD_NOT_BE_CLOSED
class Frame(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Frame, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Frame, name)
    __repr__ = _swig_repr
    __swig_setmethods__["seq"] = _apiBP.Frame_seq_set
    __swig_getmethods__["seq"] = _apiBP.Frame_seq_get
    if _newclass:seq = _swig_property(_apiBP.Frame_seq_get, _apiBP.Frame_seq_set)
    __swig_setmethods__["dig_in"] = _apiBP.Frame_dig_in_set
    __swig_getmethods__["dig_in"] = _apiBP.Frame_dig_in_get
    if _newclass:dig_in = _swig_property(_apiBP.Frame_dig_in_get, _apiBP.Frame_dig_in_set)
    __swig_setmethods__["an_in"] = _apiBP.Frame_an_in_set
    __swig_getmethods__["an_in"] = _apiBP.Frame_an_in_get
    if _newclass:an_in = _swig_property(_apiBP.Frame_an_in_get, _apiBP.Frame_an_in_set)
    def __init__(self, *args): 
        this = _apiBP.new_Frame(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _apiBP.delete_Frame
    __del__ = lambda self : None;
Frame_swigregister = _apiBP.Frame_swigregister
Frame_swigregister(Frame)

BPInitComm = _apiBP.BPInitComm
BPBeginAcq = _apiBP.BPBeginAcq
BPGetFrames = _apiBP.BPGetFrames
BPSetDOut = _apiBP.BPSetDOut
BPEndAcq = _apiBP.BPEndAcq
BPCloseComm = _apiBP.BPCloseComm
BPStr2UINT64 = _apiBP.BPStr2UINT64
BPUINT642Str = _apiBP.BPUINT642Str
create_Frames = _apiBP.create_Frames
get_Frame = _apiBP.get_Frame
delete_Frames = _apiBP.delete_Frames
get_an_in = _apiBP.get_an_in
create_uint64 = _apiBP.create_uint64
get_uint64 = _apiBP.get_uint64
delete_uint64 = _apiBP.delete_uint64
BPUINT642String = _apiBP.BPUINT642String

BPGetFirmwareVersion = _apiBP.BPGetFirmwareVersion
BPGetLastErrorMessage = _apiBP.BPGetLastErrorMessage
BPFindDevices = _apiBP.BPFindDevices

